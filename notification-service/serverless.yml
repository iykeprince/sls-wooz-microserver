service: notification-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters
  - serverless-deployment-bucket
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  region: us-east-2
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: notification-service-${self:provider.stage}-deployment
    serverSideEncryption: AES256
  environment:
    MAIL_QUEUE_URL: ${self:custom.mailQueue.url}
  iamRoleStatements:
    - ${file(iam/SendMailIAM.yml):SendMailIAM}
    - ${file(iam/S3IAM.yml):S3IAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}

resources:
  Resources:
    MailQueue: ${file(resources/MailQueue.yml):MailQueue}

functions:
  getEmailLogs:
    handler: src/handlers/getEmailLogs.handler
    events:
      - http:
          method: GET
          path: /email-service/logs/all
          cors: true
  searchEmail:
    handler: src/handlers/searchEmail.handler
    events:
      - http:
          method: GET
          path: /email-service/logs/search
          cors: true
  filterEmailLogs:
    handler: src/handlers/filterEmailLogs.handler
    events:
      - http:
          method: GET
          path: /email-service/logs/filter
          cors: true
  sendNotification:
    handler: src/handlers/sendNotification.handler
    events:
      - http:
          method: POST
          path: /email-service/send_notification
          cors: true
  retrySendMail:
    handler: src/handlers/retrySendMail.handler
    events:
      - http:
          method: POST
          path: /retry-send-mail/{id}
          cors: true
  notifySubscribers:
    handler: src/handlers/notifySubscribers.handler
    events:
      - http:
          method: POST
          path: /push-notification/notify-subscribers
          cors: true
  subscribeTopic:
    handler: src/handlers/subscribeTopic.handler
    events:
      - http:
          method: POST
          path: /push-notification/subscribe-topic
          cors: true
  unsubscribeTopic:
    handler: src/handlers/unsubscribeTopic.handler
    events:
      - http:
          method: POST
          path: /push-notification/unsubscribe-topic
          cors: true
  sendMail:
    handler: src/handlers/sendMail.handler
    events:
      - sqs:
          arn: ${self:custom.mailQueue.arn}
          batchSize: 1

custom:
  mailQueue:
    name: MailQueue-${self:provider.stage}
    arn: !GetAtt MailQueue.Arn
    url: !Ref MailQueue
  bundle:
    linting: false
